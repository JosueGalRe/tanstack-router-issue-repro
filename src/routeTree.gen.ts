/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthWasteAndBreakdownsLogIndexImport } from './routes/_auth/waste-and-breakdowns-log/index'
import { Route as AuthUserManagementIndexImport } from './routes/_auth/user-management/index'
import { Route as AuthStoreVisitsIndexImport } from './routes/_auth/store-visits/index'
import { Route as AuthShiftManagementIndexImport } from './routes/_auth/shift-management/index'
import { Route as AuthSensitiveMerchandiseLogIndexImport } from './routes/_auth/sensitive-merchandise-log/index'
import { Route as AuthSecurityEventsIndexImport } from './routes/_auth/security-events/index'
import { Route as AuthNewsLogIndexImport } from './routes/_auth/news-log/index'
import { Route as AuthLegalProceedingsManagementIndexImport } from './routes/_auth/legal-proceedings-management/index'
import { Route as AuthEquipmentInventoryIndexImport } from './routes/_auth/equipment-inventory/index'
import { Route as AuthClientIncidentsIndexImport } from './routes/_auth/client-incidents/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWasteAndBreakdownsLogIndexRoute =
  AuthWasteAndBreakdownsLogIndexImport.update({
    path: '/waste-and-breakdowns-log/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthUserManagementIndexRoute = AuthUserManagementIndexImport.update({
  path: '/user-management/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthStoreVisitsIndexRoute = AuthStoreVisitsIndexImport.update({
  path: '/store-visits/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthShiftManagementIndexRoute = AuthShiftManagementIndexImport.update({
  path: '/shift-management/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSensitiveMerchandiseLogIndexRoute =
  AuthSensitiveMerchandiseLogIndexImport.update({
    path: '/sensitive-merchandise-log/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthSecurityEventsIndexRoute = AuthSecurityEventsIndexImport.update({
  path: '/security-events/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNewsLogIndexRoute = AuthNewsLogIndexImport.update({
  path: '/news-log/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLegalProceedingsManagementIndexRoute =
  AuthLegalProceedingsManagementIndexImport.update({
    path: '/legal-proceedings-management/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthEquipmentInventoryIndexRoute =
  AuthEquipmentInventoryIndexImport.update({
    path: '/equipment-inventory/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClientIncidentsIndexRoute = AuthClientIncidentsIndexImport.update({
  path: '/client-incidents/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/client-incidents/': {
      id: '/_auth/client-incidents/'
      path: '/client-incidents'
      fullPath: '/client-incidents'
      preLoaderRoute: typeof AuthClientIncidentsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/equipment-inventory/': {
      id: '/_auth/equipment-inventory/'
      path: '/equipment-inventory'
      fullPath: '/equipment-inventory'
      preLoaderRoute: typeof AuthEquipmentInventoryIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/legal-proceedings-management/': {
      id: '/_auth/legal-proceedings-management/'
      path: '/legal-proceedings-management'
      fullPath: '/legal-proceedings-management'
      preLoaderRoute: typeof AuthLegalProceedingsManagementIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/news-log/': {
      id: '/_auth/news-log/'
      path: '/news-log'
      fullPath: '/news-log'
      preLoaderRoute: typeof AuthNewsLogIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/security-events/': {
      id: '/_auth/security-events/'
      path: '/security-events'
      fullPath: '/security-events'
      preLoaderRoute: typeof AuthSecurityEventsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sensitive-merchandise-log/': {
      id: '/_auth/sensitive-merchandise-log/'
      path: '/sensitive-merchandise-log'
      fullPath: '/sensitive-merchandise-log'
      preLoaderRoute: typeof AuthSensitiveMerchandiseLogIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/shift-management/': {
      id: '/_auth/shift-management/'
      path: '/shift-management'
      fullPath: '/shift-management'
      preLoaderRoute: typeof AuthShiftManagementIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/store-visits/': {
      id: '/_auth/store-visits/'
      path: '/store-visits'
      fullPath: '/store-visits'
      preLoaderRoute: typeof AuthStoreVisitsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user-management/': {
      id: '/_auth/user-management/'
      path: '/user-management'
      fullPath: '/user-management'
      preLoaderRoute: typeof AuthUserManagementIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/waste-and-breakdowns-log/': {
      id: '/_auth/waste-and-breakdowns-log/'
      path: '/waste-and-breakdowns-log'
      fullPath: '/waste-and-breakdowns-log'
      preLoaderRoute: typeof AuthWasteAndBreakdownsLogIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthClientIncidentsIndexRoute: typeof AuthClientIncidentsIndexRoute
  AuthEquipmentInventoryIndexRoute: typeof AuthEquipmentInventoryIndexRoute
  AuthLegalProceedingsManagementIndexRoute: typeof AuthLegalProceedingsManagementIndexRoute
  AuthNewsLogIndexRoute: typeof AuthNewsLogIndexRoute
  AuthSecurityEventsIndexRoute: typeof AuthSecurityEventsIndexRoute
  AuthSensitiveMerchandiseLogIndexRoute: typeof AuthSensitiveMerchandiseLogIndexRoute
  AuthShiftManagementIndexRoute: typeof AuthShiftManagementIndexRoute
  AuthStoreVisitsIndexRoute: typeof AuthStoreVisitsIndexRoute
  AuthUserManagementIndexRoute: typeof AuthUserManagementIndexRoute
  AuthWasteAndBreakdownsLogIndexRoute: typeof AuthWasteAndBreakdownsLogIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthClientIncidentsIndexRoute: AuthClientIncidentsIndexRoute,
  AuthEquipmentInventoryIndexRoute: AuthEquipmentInventoryIndexRoute,
  AuthLegalProceedingsManagementIndexRoute:
    AuthLegalProceedingsManagementIndexRoute,
  AuthNewsLogIndexRoute: AuthNewsLogIndexRoute,
  AuthSecurityEventsIndexRoute: AuthSecurityEventsIndexRoute,
  AuthSensitiveMerchandiseLogIndexRoute: AuthSensitiveMerchandiseLogIndexRoute,
  AuthShiftManagementIndexRoute: AuthShiftManagementIndexRoute,
  AuthStoreVisitsIndexRoute: AuthStoreVisitsIndexRoute,
  AuthUserManagementIndexRoute: AuthUserManagementIndexRoute,
  AuthWasteAndBreakdownsLogIndexRoute: AuthWasteAndBreakdownsLogIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof AuthIndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginIndexRoute
  '/client-incidents': typeof AuthClientIncidentsIndexRoute
  '/equipment-inventory': typeof AuthEquipmentInventoryIndexRoute
  '/legal-proceedings-management': typeof AuthLegalProceedingsManagementIndexRoute
  '/news-log': typeof AuthNewsLogIndexRoute
  '/security-events': typeof AuthSecurityEventsIndexRoute
  '/sensitive-merchandise-log': typeof AuthSensitiveMerchandiseLogIndexRoute
  '/shift-management': typeof AuthShiftManagementIndexRoute
  '/store-visits': typeof AuthStoreVisitsIndexRoute
  '/user-management': typeof AuthUserManagementIndexRoute
  '/waste-and-breakdowns-log': typeof AuthWasteAndBreakdownsLogIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthIndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginIndexRoute
  '/client-incidents': typeof AuthClientIncidentsIndexRoute
  '/equipment-inventory': typeof AuthEquipmentInventoryIndexRoute
  '/legal-proceedings-management': typeof AuthLegalProceedingsManagementIndexRoute
  '/news-log': typeof AuthNewsLogIndexRoute
  '/security-events': typeof AuthSecurityEventsIndexRoute
  '/sensitive-merchandise-log': typeof AuthSensitiveMerchandiseLogIndexRoute
  '/shift-management': typeof AuthShiftManagementIndexRoute
  '/store-visits': typeof AuthStoreVisitsIndexRoute
  '/user-management': typeof AuthUserManagementIndexRoute
  '/waste-and-breakdowns-log': typeof AuthWasteAndBreakdownsLogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/_auth/': typeof AuthIndexRoute
  '/login/': typeof LoginIndexRoute
  '/_auth/client-incidents/': typeof AuthClientIncidentsIndexRoute
  '/_auth/equipment-inventory/': typeof AuthEquipmentInventoryIndexRoute
  '/_auth/legal-proceedings-management/': typeof AuthLegalProceedingsManagementIndexRoute
  '/_auth/news-log/': typeof AuthNewsLogIndexRoute
  '/_auth/security-events/': typeof AuthSecurityEventsIndexRoute
  '/_auth/sensitive-merchandise-log/': typeof AuthSensitiveMerchandiseLogIndexRoute
  '/_auth/shift-management/': typeof AuthShiftManagementIndexRoute
  '/_auth/store-visits/': typeof AuthStoreVisitsIndexRoute
  '/_auth/user-management/': typeof AuthUserManagementIndexRoute
  '/_auth/waste-and-breakdowns-log/': typeof AuthWasteAndBreakdownsLogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/client-incidents'
    | '/equipment-inventory'
    | '/legal-proceedings-management'
    | '/news-log'
    | '/security-events'
    | '/sensitive-merchandise-log'
    | '/shift-management'
    | '/store-visits'
    | '/user-management'
    | '/waste-and-breakdowns-log'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/client-incidents'
    | '/equipment-inventory'
    | '/legal-proceedings-management'
    | '/news-log'
    | '/security-events'
    | '/sensitive-merchandise-log'
    | '/shift-management'
    | '/store-visits'
    | '/user-management'
    | '/waste-and-breakdowns-log'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/_auth/'
    | '/login/'
    | '/_auth/client-incidents/'
    | '/_auth/equipment-inventory/'
    | '/_auth/legal-proceedings-management/'
    | '/_auth/news-log/'
    | '/_auth/security-events/'
    | '/_auth/sensitive-merchandise-log/'
    | '/_auth/shift-management/'
    | '/_auth/store-visits/'
    | '/_auth/user-management/'
    | '/_auth/waste-and-breakdowns-log/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.ts",
      "children": [
        "/_auth/",
        "/_auth/client-incidents/",
        "/_auth/equipment-inventory/",
        "/_auth/legal-proceedings-management/",
        "/_auth/news-log/",
        "/_auth/security-events/",
        "/_auth/sensitive-merchandise-log/",
        "/_auth/shift-management/",
        "/_auth/store-visits/",
        "/_auth/user-management/",
        "/_auth/waste-and-breakdowns-log/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_auth/client-incidents/": {
      "filePath": "_auth/client-incidents/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/equipment-inventory/": {
      "filePath": "_auth/equipment-inventory/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/legal-proceedings-management/": {
      "filePath": "_auth/legal-proceedings-management/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/news-log/": {
      "filePath": "_auth/news-log/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/security-events/": {
      "filePath": "_auth/security-events/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/sensitive-merchandise-log/": {
      "filePath": "_auth/sensitive-merchandise-log/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/shift-management/": {
      "filePath": "_auth/shift-management/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/store-visits/": {
      "filePath": "_auth/store-visits/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/user-management/": {
      "filePath": "_auth/user-management/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/waste-and-breakdowns-log/": {
      "filePath": "_auth/waste-and-breakdowns-log/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
